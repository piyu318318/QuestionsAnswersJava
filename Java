
1)Can we overload static methods? 
ans : The answer is ‘Yes’. We can have two or more static methods with the same name, but differences in input parameters. For example, consider the following Java program.
// filename Test.java
public class Test {
    public static void foo() {
        System.out.println("Test.foo() called ");
    }
    public static void foo(int a) {
        System.out.println("Test.foo(int) called ");
    }
    public static void main(String args[])
    {
        Test.foo();
        Test.foo(10);
    }
}


2)Can we override Static methods ?
ans: Static methods are bonded at compile time using static binding. Therefore, we cannot override static methods in Java

3)what is JIT:
ans : just in time compiler .it increases  efficiency of  the interpreter  by compiling bytecode in the runtime.

4)what is class loader ?
class loader is a one of integered part of JVM it loads the class

5)types of memory in java ?
class memory ,  heap memory ,   stack memory

6)what is the defauls value of local variable in java ? 
-> for local variables default value is garbage value and for reference variablel default value is null.

7)Define copy constructor 
A copy constructor in java is a constructor that initializes an object through another object oof the same class.

8)What is serializable and why use it?
Image result for what is serializable in java
Serialization is the process of converting an object into a stream of bytes to store the object or transmit it to memory, a database, or a file.

9)what is object cloning?
An ability to recreate an object completely similar to an existing object is known as object cloninig in java.
Java provides clone() method to clone an existing object offerring same functionality of the original object.

10)Java is not completely object oriented programming language ?
Java is not considered as 100% objject oriented programming language because it still make use of eight or more primitive data types like int,float,double etc.

11)DEfine wrapper class in java?
The wrapper classes in Java are used to convert primitive types ( int , char , float , etc) into corresponding objects.
boxing  =   primitive -> objects
unboxing  = objects  -> primitive

12)what is singleton class in java? 
singletin class is a class of which we can create only one object . to achieve singletom class we make constructor of a class private , then particular class 
can generate only one single object.
Making private connstructor you can create singleton class.

//example 1
class SingleTonclass
{
	private SingleTonclass()
	{
		System.out.println("piyush");
	}
	
	private static SingleTonclass instance;//create instance variable

	public static SingleTonclass getinstance()//will return the instance 
	{
		if(instance == null)
			instance = new SingleTonclass(); //allocate memory for first object means created first obj  

		return instance;
	}
}

class Main
{
	public static void main(String[] args) 
	{
		SingleTonclass obj1 = SingleTonclass.getinstance();//static method 
		SingleTonclass obj2 = SingleTonclass.getinstance();//will not get created

	}
}

15)what are  packages ?
packages are bundle of classes and interfaces along with necessary libraries and JAR files.
what are  packages = packages are bundle of classes and interfaces along with necessary libraries and JAR files use of packages are helps in reusabiltity
packages works like a container.
syntax to create package : package packname;
syntax to import package import packname;

16)can you implement pointers in java ?
java virtual machine takes care of memory management implicitly. java major motto was to keep programming simple . 
So, accessing memory directly through pointers is not recommended action . Hence pointers are eliminated from java.

17)difference instance variable and local variable ?
instance variable are declared inside a class and scope is to only specific object. 
local variables can be anywhere inside a method or constructor or a specific block of a code where the variables are declared.

class ABC
{
    String str;  //instance variable
    ABC(String str)  //local variable
    {
        this.str = str;
    }
}

class Main 
{
    public static void main(String args[])
    {
        ABC obj = new ABC();   // ABC obj is reference variable refers to object
    }
}
  
18)explain java string pool ?
String Pool is a storage area in Java heap. String allocation, like all object allocation, proves to be a costly affair in both the cases of time and memory.
The JVM performs some steps while initializing string literals to increase performance and decrease memory overhead.          
example : String s1= "India"; Stirng s2 ="India";  for s1 it creates memory in string pool and s2 will also refer to "India" bcoz both are the same content 
if s3="piyush" s3 will point to the "piyush"
if you create 100 string as india for 100 strings it wont allocate memory all 100 strings will refer to the same "India"

class StringPool
{
	public static void main(String[] args) 
	{

		String s1 ="piyush";	//piyush will get allocate in  string pool and s1 refer s1	
		String s2 ="piyush";	//as piyush is same s2 will refer to piyush it will be shallow copy
		String s3 ="piyush";	//as piyush is same s3 will refer to piyush it will be shallow copy
		String s4 ="piyush";	//as piyush is same s4 will refer to piyush	it will be shallow copy
		String s5 ="piyush";	//same 	
		String s6 ="piyush";		
		String s7 ="piyush";//alll this refering to piyush 
		String s8="india";//it will check if india is in the string poool s8 will refer to india
		
		if(s1==s2)
		{
			System.out.println("Same");//return not same  bcoz s1 refering piyush and s8 refering india
		}	
		if(s1 == s8)
		{
			System.out.println("Not Same");//return not same  bcoz s1 refering piyush and s8 refering india
		}
	}	
}

19)What is an Exception?
An exception is an event, which occurs during the execution of a program, that disrupts the normal flow of the program's instructions. 
When an error occurs within a method, the method creates an object and hands it off to the runtime system
try block : Java try block is used to enclose the code that might throw an exception.
catch block : catch block willl catch the exception which is thrown by try block
types of exception in java 
1)ArithmeticException
2)ArrayIndexOutOfBoundsException
3)FileNotFoundException
4)IOException
5)NullPointerException
Thowable class is a superclass of Eception class
		There are two types  of exception 
		a)built in exception b)User define exception
		
user defined exception program 
class MyException extends Exception {
}
 
// A Class that uses above MyException
class Demo extends Exception
{
	public mahexcep(String s)
	{
		super(s);
	}	
}

public class Exception1
{
	public static void main(String[] args) 
	{
		try
		{
			throw new mahexcep("piyush");
		}
		catch
		{
			  System.out.println("Caught");
		}
	}		
}

checked Exception = These are the exceptions that are checked at compile time. eg IOException if we  used Scanner class or BufferedReader
unchecked Exception = These are the exceptions that are not checked at compile time. example ArithmaticException

21)what is final keyword in java ?
final keyword  as variable wont alllow to modify value of  variable in java.
final keyword also use to prevent method overriding.
we can make final class as well. if we declare final as  class we cannot extend that class.

22)what will happen if you dont decared main method as a static ?
as main method is invoked by JVM . the program will get compile but when you goes to run the program it will throw error 
ClassWithoutStaticMain please define main method as public static void main(String args[[)

23)what is String args[] ?
if you are taking command line argument in java program it will take as a string array[] so we define String args[] String is type of command line args[] is a array.

24)what is JDK ?             
JDK in Java is an abbreviation for Java Development Kit. It is a bundle of software development tools and supporting libraries combined with the 
Java Runtime Environment (JRE) and Java Virtual Machine (JVM).

25)can constructor return a value ? 
constructor don't have a return datatype as methods has. but  constructor implicitly returns current instance of a class .
It is not possible use explicit return type of a constructor .

26)is constructor inherited ? NO constructor cannot inherited a class can be inherited.

27)can you make constructor final ? no constructor cannot be final.

28) Can constructor override ? No

29)Can constructor override ? yes

30)method override possible in same class ? :NO method overriding is allow in two different classes.

31)can we overload a constructor ? yes we can overload a constructor. by changing number of argumnetts but we cat override a constructor.

32)this keyword in java ? 
this keyword is use to refer the current instance variable in java if local variable and instance variable are same then to remove the ambiguity we use "this" key word .
this is also used to Invoke current class constructor and Invoke current class method.

33)what is super keyword in java ?
-> the term super keyword is used to 1) call immidiate parent class constructor  2)call immediate parent class method 3)refer parent class instance variable.

34)what is method overloading in java ?
the process to create multiple method signatures using one method name is called method overloading. method overloading is also called as static binding.


35) Life cycle of thread ?
Life Cycle of a thread
New Thread: When a new thread is created, it is in the new state. The thread has not yet started to run when the thread is in this state. When a thread lies in the new state, its code is yet to be run and hasn’t started to execute.
Runnable State: A thread that is ready to run is moved to a runnable state. In this state, a thread might actually be running or it might be ready to run at any instant of time. It is the responsibility of the thread scheduler to give the thread, time to run. 
A multi-threaded program allocates a fixed amount of time to each individual thread. Each and every thread runs for a short while and then pauses and relinquishes the CPU to another thread so that other threads can get a chance to run. When this happens, all such threads that are ready to run, waiting for the CPU and the currently running thread lie in a runnable state.
Blocked/Waiting state: When a thread is temporarily inactive, then it’s in one of the following states: 
Blocked
Waiting
Timed Waiting: A thread lies in a timed waiting state when it calls a method with a time-out parameter. A thread lies in this state until the timeout is completed or until a notification is received. For example, when a thread calls sleep or a conditional wait, it is moved to a timed waiting state.
Terminated State: A thread terminates because of either of the following reasons: 
Because it exits normally. This happens when the code of the thread has been entirely executed by the program.
Because there occurred some unusual erroneous event, like segmentation fault or an unhandled exception.

36)can Abstract we create constructor of an abstract class?
abstract class ABC
{
	ABC(int a)
	{
		System.out.println("Parameterized Constructor of an abstract class a="+ x);
	}
}

class ConstructorOfAbstractClass extends ABC
{	
	ConstructorOfAbstractClass()
	{
		super(20);
		System.out.println("Class Constructor");
	}

	public static void main(String[] args) 
	{
		ConstructorOfAbstractClass obj = new ConstructorOfAbstractClass();
	}
}


35)can we oveload static method : yes we can overload static methods but we cannot override the static methods in java . to avoid overriding we use final,static keyword


36)what is inner class in java ?
/A class within a class is called as innnerclass in java.
//In Java, it is also possible to nest classes (a class within a class). 
/*The purpose of nested classes is to group classes that belong together, which makes your code more
 readable and maintainable.*/

class ABC
{
	int x=10;

	class XYZ
	{
		int y=20;
		int z=x+=y; //can acess the x bcoz XYZ is in the scope of class ABC
	}
}

class InnerClass
{
	public static void main(String[] args) 
	{
		ABC outer = new ABC();
		ABC.XYZ inner = outer.new XYZ();

		System.out.println(inner.y+outer.x);
		System.out.println(inner.z);

	}
}


37) what is diff between StringBuffered and StringBuilder ?
->String class is immutable in java. to overcome immutability  StringBuffer and StringBuilder is use both are immutable.
StringBuffer = StringBuffer class is a class which provides String mutability StringBuffer are safe for use of multiple thread. 
if your application is working with multiple thread and you dont want to affect one thread operation affect other thread operation.
means if one String is accessing StringBuffer other thread will have eto. it means there is synchronization between the
StringBuilder = StringBuilder class is a class which provides String mutability StringBuffer are not safe  for use of multiple thread.
StringBuilder doesnt provide synchronization.

if you have multiple thread go for the StringBuffer and if you have single thread go for the StringBuilder

38)what is hashcode in java?
->
hashcode is an integer which represent internal address  of an object.
Hashcode differes one object to another object.
Hashcode acts like an identity for an object.
mostly hashcode is used to store,remove,search in set and map collections.
In object class we have a method hashcode(). we only have to override to check hashcode.
class Emp
{
	String name;
	Emp(String name)
	{
		this.name = name;
	}
}


class HashCodeMethod
{
	public static void main(String[] args) 
	{
		Emp e1 = new Emp("piyush");
		Emp e2 = new Emp("piyush");

		if(e1.equals(e2)) //hashcode of e1 is diiff from e2 so Hashcode differes one object to another object.
			System.out.println("equal string");
		else
			System.out.println("not equal string");

		System.out.println(e1.hashCode()); //hashcode is diiff from e2 
		System.out.println(e2.hashCode()); //hashcode is diiff from e1

	}	
}


39)How we can creates threads in java?
There are two ways to create thread in java 1)extending Thread class 3)implementing the runanble interfaces.
After extending the Thread class we have to override the run() method after overriding method we can write our own logic in run method.
we have to use start() method to start that thread.

class MyThread extends Thread {
 
    // Method 1
    // Run() method for our thread
    public void run()
    {
 
        // Print statement
        System.out.println(
            "Thread is running created by extending to parent Thread class");
    }
 
    // Method 2
    // Main driver method
    public static void main(String[] args)
    {
 
        // Creating object of our thread class inside main()
        // method
        MyThread myThread = new MyThread();
       
        // Starting the thread
        myThread.start();
    }
}


using Runnable inteface :
public class RunnableDemo {
 
    public static void main(String[] args)
    {
        System.out.println("Main thread is- "
                        + Thread.currentThread().getName());
        Thread t1 = new Thread(new RunnableDemo().new RunnableImpl());
        t1.start();
    }
 
    private class RunnableImpl implements Runnable {
 
        public void run()
        {
            System.out.println(Thread.currentThread().getName()
                             + ", executing run() method!");
        }
    }
}

40)can we call start method two times in java  
ans : No. After starting a thread, it can never be started again. If you does so, an IllegalThreadStateException is thrown.

41)What are methods object class has?
->clone(), equals(), toString(), hashCode(), notify(), notifyall(), wait()

42)how can you achieve abstraction (oops) concept in java ?
->1st way is use abstract class in java 
2nd way is to implement interfaces.

abstract class :
if any one of method of a class is abstract then that class mustt be declared as a abstract.
abstract class can have abstract method as well as its own methods also means non abstract methods ,static methods etc.
abstract class cannot be instantiate.
it can have constructors as well as static methods.
you have to override all the abstract methods of abstract class.


interfaces :
in interfaces methods are default public and abstract and variables are public static final.
all the methods you have declared in interface must be override in a class which is implemented.
we cannot instantiate the interfaces.
we cannot create the object  of interface.
it cannot have constructors.
It is 100% abstaction.
using interfaces we can achieve multiple inheritance.

43)diff in static method and nonstatic method :

static methods belongs to the class not to the object.
we cannot use non static data members(variables) inside a static method.static method, the method can only access only static data members
static methods are called using classname.methodname();
static methods are indipendent of objects.

nonstatic method
nonstatic methods are belongs to the objects.
to call nonstatic methods we have to use obj.methodname();


44)how many constructors a one class can have ?
-> many constructors if we use constructor overloading.(65535 constructors can create of single class)

45)can one constructor call from another constructor?
->yes we can call one constructor from another constructor using super keyword.
Within same class: It can be done using this() keyword for constructors in the same class
From base class: by using super() keyword to call the constructor from the base class.

46)how to call any constructor in java ?
->  by creating an object.

47)what is use of private keyword?
-> a data member of member function is private then we cannot use that member outside of that class.

48)what are the 4 pillers oop should have ?
->encapsulation,abstraction,polymorphism, inheritance

49)what is polymorphism ?
-> polymorphism means one acton havinf many operations. or one single name having many forms.
real life  : Another excellent real time example of polymorphism is your smartphone. The smartphone can act as phone, camera, music player and what not, 
taking different forms and hence polymorphism.

50 )how can you achieve polymorphism ?
-> runtime polymorphism = method overrding
static polymorphism = method oveloading and constructor oveloading'

51)why multiple inheritance is not allowed in java?
->in java 

class A
{
	int n=10;
}
class B
{
	int n=20;
}

class C extends A ,B
{
}
the class C will get confused which n to be used  thats why java doesnt support multiple inheritance.

52)what are the primitive datatypes in java?
->byte,short,int,float,double,char,long,boolean
primitive datatpyes means we cannot further divide like array ,String  etc.

53)why java dont use pointers ?
->	a)pointers are unsafe 
	b)increases complexity of program
	c)JVM is the one who is responsible for implicit memory allocation.
	
54)what is use of byte code?
->byte code makes code completely machine indipendent.

55)whhy Strings are immutable?
->Stirng pool requires string to be immutable otherwise shared reference can be  changed  shared from anywhere.
security bcoz string is shared on different area like file system,networking connection.

56)what is marker interface ?
->A marker inertface can be defined as an inteface having no data member and member function.In simple terms an emptyy innterface is called as marker interface.
example of marker interface : a)Clonable b)Serializable c)RandomAccess

57)Serializable inteface in java?
->By implementing Serializable our object can be saved to the file or can travel across network.

58)Can we override a private or static method in java ?
-> no we cannot override a private method or static method in java we can overload a static method.

59)finally block always execute ?
yes finally block always execute except in System.exit() and Syste crash

60)How can you make class immutable?
a)declare class as a final 
b)make all foeld private 
c)dont provide setters methods.
d)make all firls fields as a final so that it cannot be modified again.
e)initialize all fields via constructors performing a  deep copy.
f)perform cloning of objects in getters mmethods to return a copy rather than returning actual object reference.


61)what feature help java write once and run it anywhere ?
->Its a platform indipendent feature in java that allows you to run the bytecode in any other operating system that makes a portable across different systems.

62)A java code without a main mathod what will happen ?
->If your program doesn't contain the main method, then you will get an error “main method not found in the class”.
It will give an error (byte code verification error because in it's byte code, main is not there) not an exception because the program has not run yet.
unliess its a applet bcoz applet runs without main method.

63)Can we override the main method?
-> No, we cannot override main method of java because a static method cannot be overridden. 
The static method in java is associated with class whereas the non-static method is associated with an object.

64)can we oveload a main method ?
->yes, we can overload the main() method. But remember that the JVM always calls the original main() method. It does not call the overloaded main() method.
class MainMethodOverload
{

	public static void main(int args) 
	{
		System.out.println("main method with int arguments .");
	}

	public static void main(char args) 
	{
		System.out.println("main method with char arguments .");
	}

	public static void main(String[] args) 
	{
		System.out.println("main method with string arguments .");
		MainMethodOverload.main(1);//calling the main( int args)
		MainMethodOverload.main('a');/calling the main (char args)

	}
}

65)what is use of JVM?
Java Virtual Machine, or JVM, loads, verifies and executes Java bytecode. It is known as the interpreter or the core of Java programming language 
because it executes Java programming.

66)whaat is JDK JRE AND JVM ?
JDK = JRE + JVM)
JDK= java development kit. It internally contains jre and jvm.where JRE stands for java runtime environment and JVM stands for java virtual machine.
      JDK provides all the tools to work with java language. ecample javac,javadoc, jar,appletviewer.
JRE = JRE stands for java runtime environment.It provides an environment to execute the java program .It internally contains JVM which is responsible to create a
java program.
JVM= JVM stands for Java virtual machine it is software in the form of interpreter which is written in c language through which we can execute java program.

67)A main method without static ?
->The code will not get execute bcoz main method is called by the jvm it should which is outside the class so it should br the static.
if we write  program main method without static then it will throw an error and "define main mehtod as public static void main(String args[])" like this.
even it wont get compile means byte code wont get generate.

68)





