Q)select distinct(city) from station where mod(id,2) =0 order by city

Q)
select city,length(city) from station order by length(city),city limit 1;

select city,length(city) from station order by length(city) desc,city  limit 1; 
  
Q)select city who are starting with vowel.
select city from station where substr(city,1,1)='a' or substr(city,1,1)='e' or substr(city,1,1)='i' or  substr(city,1,1)='o' or substr(city,1,1)='u';
or
select  city from station where city like "a%" or  city like "e%" or  city like "i%" or  city like "o%" or  city like "u%";

Q)Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.
select distinct(city) from station where city like "%a"or city like "%e" or city like "%i" or city like "%o" or city like "%u" ;

Q)starting city name vowel and ending also with vowel with no dublicate.
SELECT DISTINCT city FROM station WHERE city REGEXP "^[aeiou].*[aeiou]$"; 

Q)Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.
select distinct(city) from station where city like "b%" or city like "c%" or city like "d%"  or city like "f%" or city like "g%" or city like "h%" or city like "j%" or city like "k%" or city like "l%" or city like "m%" or city like "n%" or city like "p%" or city like "q%" or city like "r%" or city like "s%" or city like "t%" or city like "v%" or city like "w%" or city like "x%" or city like "y%" or city like "z%" ;

Q)Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.
SELECT DISTINCT CITY FROM STATION WHERE UPPER(SUBSTR(CITY, LENGTH(CITY), 1)) NOT IN ('A','E','I','O','U') AND LOWER(SUBSTR(CITY, LENGTH(CITY),1)) NOT IN ('a','e','i','o','u');

Q)Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.

select distinct(city) from station where 
(not(city like "A%" or city like "A%" or city like "E%" or city like "I%" or city like "O%" or city like "U%")) 
or 
(not(city like "%A" or city like "%E" or city like "%I" or city like "%O" or city like "%O" or city like "%U")) ;


Q)Query the list of CITY names from STATION that do not start with vowels and do not end with vowels. Your result cannot contain duplicates.
select distinct(city) from station where 
(not(city like "A%" or city like "A%" or city like "E%" or city like "I%" or city like "O%" or city like "U%")) 
and 
(not(city like "%A" or city like "%E" or city like "%I" or city like "%O" or city like "%O" or city like "%U")) ;


Q)Query the Name of any student in STUDENTS who scored higher than 75  Marks. Order your output by the last three characters of each name. If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.
SELECT Name
FROM STUDENTS
WHERE Marks > 75
ORDER BY SUBSTRING(name, length(name)-2, 3), ID;

Q)Write a query that prints a list of employee names (i.e.: the name attribute) from the Employee table in alphabetical order.
select name from employee order by name;

Q)Write a query that prints a list of employee names (i.e.: the name attribute) for employees in Employee having a salary greater than  per month who have been employees for less than  months. Sort your result by ascending employee_id
select name from employee where salary>2000 and  months <10  order by employee_id ;


Q)Write a query identifying the type of each record in the TRIANGLES table using its three side lengths. Output one of the following statements for each record in the table:

Equilateral: It's a triangle with 3 sides of equal length.
Isosceles: It's a triangle with 2 sides of equal length.
Scalene: It's a triangle with 3 sides of differing lengths.
Not A Triangle: The given values of A, B, and C don't form a triangle.


select
    case
        when a=b and b=c then 'Equilateral'
        when a+b <=c or b+c<=a or a+c<b then 'Not A Triangle'
        when a=b or b=c or a=c then 'Isosceles'
        else 'Scalene'
    end
from TRIANGLES

Q)


























