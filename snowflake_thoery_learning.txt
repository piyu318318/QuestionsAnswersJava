
CREATE A DATABASE IN SNOWFLAKE 
************************************************************************************************************************************************
-- Create a database from the share.
syntx :
create schema piyush_snowflake.my_schema;
use  schema piyush_snowflake.my_schema;

use database piyush_snowflake;
use schema my_schema;
create or replace table emp (
    id integer,
    name string,
    department string,
    salary number(10,2)
);


insert into emp (id, name, department, salary) values
(1, 'Alice', 'HR', 60000.00),
(2, 'Bob', 'Finance', 70000.00),
(3, 'Charlie', 'Engineering', 90000.00),
(4, 'Diana', 'Marketing', 65000.00),
(5, 'Ethan', 'Engineering', 85000.00),
(6, 'Fiona', 'Finance', 72000.00),
(7, 'George', 'HR', 58000.00),
(8, 'Hannah', 'Sales', 63000.00),
(9, 'Ian', 'Sales', 61000.00),
(10, 'Jane', 'Engineering', 95000.00);


-- Grant the PUBLIC role access to the database.
-- Optionally change the role name to restrict access to a subset of users.
grant imported privileges on database piyush_snowflake to role public;

Using grant command You are allowing all users (because of the PUBLIC role) to access the shared database and its objects, using the privileges that were imported from the provider.



1. Database üì¶
A Database in Snowflake is like a big container.
It stores schemas, tables, views, functions, etc.
Think of a database as a library ‚Äî it holds many collections (schemas).
You must create or use a database before you can create tables, views, etc.


2. Schema üóÇÔ∏è
A Schema is a sub-container inside a database.
It organizes objects like tables, views, procedures, etc.
A database can have many schemas.

************************************************************************************************************************************************



SNOWFLAKE ARCHITECHTURE 
************************************************************************************************************************************************

There are three layesrs of snowflake 
1.cloud services - brain of the system . This is the layer where we manage the infra structure. manages security , metadata,query optimization this is all done in cloud services.
2.query processing (warehouses )- muscles of the systems because it provides the actual compute power to execute the querires. these are virtual computer resources that are used to process queries and all of the operation we are executing.These warehouses can also perforrm masisve parellel processing which makes them more efficient. we can like also combine multiple queries and process them at the same time.
3.storage - this is where actual data is getting stored , its hybrid columnar storage saved in blobs , the data is getting stored in columns so when we query the data we fetch the d those blobs , it makes more efficinent to store the data and for better performnace for analytical .



WAREHOUSES

warehouses are virtual compute instances of servers that are use to process the queries .
Warehoiuses provides the compute capacity 

sizes of warehouse 
xs- extra small - it has only one server (1 server)
s- small - if our queries are comples we can use small  (2 servers)
m- medium - if queries get more complex it would be good to fast the queries (4 servers)
L- large  -(8 servsers)
XL - (16 servsers)

MULTICLUSTERING  WAREHOUSE IN SNOWFLAKE 
Snowflake offers multi clustering this menas that one warehouse for example of size s contains the query load additional clusters can be activated and they can be clusetred togetther into one warehouse 

multicluster warehouse below 
______________________
|   small cluser ‚ñà    |
|   small cluser ‚ñà    |
|   small cluser ‚ñà    |
_______________________

To create a warehouse in snowflake you need to have admin access 
To create warehouse in snowflake we need accountadmin role and securityadmin role is second most powerful after accountadmin.
Sysadmin role usually manages the warehouses 


************************************************************************************************************************************************





